{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reena\\\\Desktop\\\\react\\\\zoho\\\\Project\\\\src\\\\Home.js\";\nimport React from 'react';\nimport \"./App.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';\n\nconst Home = () => {\n  const getStory = async id => {\n    var _s = $RefreshSig$();\n\n    const useDataFetcher = type => {\n      _s();\n\n      const [stories, setStories] = useState([]);\n      const [isLoading, setIsLoading] = useState(false);\n      useEffect(() => {\n        setIsLoading(true);\n        getStories(type).then(stories => {\n          setStories(stories);\n          setIsLoading(false);\n        }).catch(() => {\n          setIsLoading(false);\n        });\n      }, [type]);\n      return {\n        isLoading,\n        stories\n      };\n    };\n\n    _s(useDataFetcher, \"3v8bc37XXuw4Vk1VhRuDt7NMbnU=\");\n\n    try {\n      const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n      return story;\n    } catch (error) {\n      console.log('Error while getting a story.');\n    }\n  };\n\n  const getStories = async type => {\n    try {\n      const {\n        data: storyIds\n      } = await axios.get(`${BASE_API_URL}/${type}stories.json`);\n      const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\n      return stories;\n    } catch (error) {\n      console.log('Error while getting list of stories.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Heading\",\n        children: \"Hacker News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","axios","BASE_API_URL","Home","getStory","id","useDataFetcher","type","stories","setStories","useState","isLoading","setIsLoading","useEffect","getStories","then","catch","story","get","error","console","log","data","storyIds","Promise","all","slice","map"],"sources":["C:/Users/reena/Desktop/react/zoho/Project/src/Home.js"],"sourcesContent":["import React from 'react'\r\nimport \"./App.css\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n \r\n\r\nconst getStory = async (id) => {\r\n\r\n  const useDataFetcher = (type) => {\r\n    const [stories, setStories] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      setIsLoading(true);\r\n      getStories(type)\r\n        .then((stories) => {\r\n          setStories(stories);\r\n          setIsLoading(false);\r\n        })\r\n        .catch(() => {\r\n          setIsLoading(false);\r\n        });\r\n    }, [type]);\r\n  \r\n    return { isLoading, stories };\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  try {\r\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\r\n    return story;\r\n  } catch (error) {\r\n    console.log('Error while getting a story.');\r\n  }\r\n};\r\n\r\nconst getStories = async (type) => {\r\n  try {\r\n    const { data: storyIds } = await axios.get(\r\n      `${BASE_API_URL}/${type}stories.json`\r\n    );\r\n    const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\r\n    return stories;\r\n  } catch (error) {\r\n    console.log('Error while getting list of stories.');\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className='header'>\r\n        <div>\r\n            <h1 className='Heading'>Hacker News</h1>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,YAAY,GAAG,uCAArB;;AAKA,MAAMC,IAAI,GAAG,MAAM;EAMnB,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;IAAA;;IAE7B,MAAMC,cAAc,GAAIC,IAAD,IAAU;MAAA;;MAC/B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;MACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,KAAD,CAA1C;MAEAG,SAAS,CAAC,MAAM;QACdD,YAAY,CAAC,IAAD,CAAZ;QACAE,UAAU,CAACP,IAAD,CAAV,CACGQ,IADH,CACSP,OAAD,IAAa;UACjBC,UAAU,CAACD,OAAD,CAAV;UACAI,YAAY,CAAC,KAAD,CAAZ;QACD,CAJH,EAKGI,KALH,CAKS,MAAM;UACXJ,YAAY,CAAC,KAAD,CAAZ;QACD,CAPH;MAQD,CAVQ,EAUN,CAACL,IAAD,CAVM,CAAT;MAYA,OAAO;QAAEI,SAAF;QAAaH;MAAb,CAAP;IACD,CAjBD;;IAF6B,GAEvBF,cAFuB;;IAgC7B,IAAI;MACF,MAAMW,KAAK,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEhB,YAAa,SAAQG,EAAG,OAArC,CAApB;MACA,OAAOY,KAAP;IACD,CAHD,CAGE,OAAOE,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,8BAAZ;IACD;EACF,CAtCD;;EAwCA,MAAMP,UAAU,GAAG,MAAOP,IAAP,IAAgB;IACjC,IAAI;MACF,MAAM;QAAEe,IAAI,EAAEC;MAAR,IAAqB,MAAMtB,KAAK,CAACiB,GAAN,CAC9B,GAAEhB,YAAa,IAAGK,IAAK,cADO,CAAjC;MAGA,MAAMC,OAAO,GAAG,MAAMgB,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkB,EAAlB,EAAsBC,GAAtB,CAA0BvB,QAA1B,CAAZ,CAAtB;MACA,OAAOI,OAAP;IACD,CAND,CAME,OAAOW,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,sCAAZ;IACD;EACF,CAVD;;EAaE,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,uBACI;MAAA,uBACI;QAAI,SAAS,EAAC,SAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAlED;;KAAMlB,I;AAoEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}